<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>