<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>